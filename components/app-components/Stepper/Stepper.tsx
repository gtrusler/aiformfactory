/* eslint-disable @next/next/no-img-element */
"use client";
import React, { FC, ReactNode, useMemo } from "react";
import classnames from "classnames";

export interface Step {
  label: string;
  value: string;
  stepSvg: ReactNode;
}

interface StepperProps {
  activeStep: Step;
  stepOptions: Step[];
}

const Stepper: FC<StepperProps> = ({ activeStep, stepOptions }) => {
  const activeIdx = useMemo(
    () => stepOptions.findIndex((i) => i.value === activeStep.value),
    [activeStep, stepOptions]
  );

  return (
    <div className="relative flex items-center w-full mb-3">
      {/** ABSOLUTE PROGRESS BAR */}
      <div className="absolute top-0 left-0 right-0 h-[4px] bg-surface-brand-hover"></div>
      <div
        className={classnames(
          "absolute top-0 left-0 h-[4px] bg-content-brand",
          ""
        )}
        style={{
          right:
            activeIdx === stepOptions.length - 1
              ? `0`
              : `calc(100% / ${1.4 + activeIdx * 1.4})`,
        }}
      ></div>

      <div className="relative flex items-center justify-around flex-1 mt-3 after:rounded-full">
        {stepOptions?.map((step) => (
          <div key={step.value} className="flex items-center">
            <div
              className={classnames(
                "z-[1] p-2 transition duration-500 ease-in-out rounded-full"
              )}
              style={{
                backgroundColor:
                  step.value === activeStep.value
                    ? "rgba(62, 0, 250, 0.05)"
                    : "rgba(62, 0, 250, 1)",
                opacity: step.value === activeStep.value ? 1 : 0.3,
              }}
            >
              {step.value === activeStep.value ? (
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 25 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    opacity="0.2"
                    d="M18.5977 14.1966L13.7546 15.9779C13.6537 16.0148 13.5622 16.0732 13.4862 16.1492C13.4103 16.2251 13.3518 16.3167 13.3149 16.4175L11.5336 21.2607C11.4811 21.4031 11.3861 21.5259 11.2616 21.6127C11.137 21.6995 10.9889 21.7461 10.8371 21.7461C10.6853 21.7461 10.5371 21.6995 10.4126 21.6127C10.288 21.5259 10.1931 21.4031 10.1405 21.2607L8.35926 16.4175C8.32234 16.3167 8.26387 16.2251 8.18793 16.1492C8.112 16.0732 8.02042 16.0148 7.91958 15.9779L3.07645 14.1966C2.93404 14.144 2.81117 14.0491 2.72438 13.9245C2.63759 13.8 2.59106 13.6518 2.59106 13.5C2.59106 13.3482 2.63759 13.2001 2.72438 13.0755C2.81117 12.951 2.93404 12.856 3.07645 12.8035L7.91958 11.0222C8.02042 10.9853 8.112 10.9268 8.18793 10.8509C8.26387 10.775 8.32234 10.6834 8.35926 10.5825L10.1405 5.73942C10.1931 5.59701 10.288 5.47413 10.4126 5.38734C10.5371 5.30056 10.6853 5.25403 10.8371 5.25403C10.9889 5.25403 11.137 5.30056 11.2616 5.38734C11.3861 5.47413 11.4811 5.59701 11.5336 5.73942L13.3149 10.5825C13.3518 10.6834 13.4103 10.775 13.4862 10.8509C13.5622 10.9268 13.6537 10.9853 13.7546 11.0222L18.5977 12.8035C18.7401 12.856 18.863 12.951 18.9498 13.0755C19.0366 13.2001 19.0831 13.3482 19.0831 13.5C19.0831 13.6518 19.0366 13.8 18.9498 13.9245C18.863 14.0491 18.7401 14.144 18.5977 14.1966Z"
                    fill="#3E00FA"
                  />
                  <path
                    d="M18.8564 12.0994L14.018 10.3181L12.2368 5.47594C12.1313 5.18937 11.9404 4.94206 11.69 4.76736C11.4395 4.59267 11.1415 4.499 10.8361 4.499C10.5308 4.499 10.2327 4.59267 9.98229 4.76736C9.73183 4.94206 9.54098 5.18937 9.4355 5.47594L7.65238 10.3125L2.81019 12.0938C2.52362 12.1992 2.27631 12.3901 2.10161 12.6405C1.92692 12.891 1.83325 13.189 1.83325 13.4944C1.83325 13.7997 1.92692 14.0978 2.10161 14.3482C2.27631 14.5987 2.52362 14.7895 2.81019 14.895L7.64581 16.6875L9.42706 21.5269C9.53255 21.8134 9.72339 22.0608 9.97385 22.2355C10.2243 22.4101 10.5223 22.5038 10.8277 22.5038C11.1331 22.5038 11.4311 22.4101 11.6815 22.2355C11.932 22.0608 12.1228 21.8134 12.2283 21.5269L14.0096 16.6884L18.8518 14.9072C19.1383 14.8017 19.3856 14.6109 19.5603 14.3604C19.735 14.1099 19.8287 13.8119 19.8287 13.5066C19.8287 13.2012 19.735 12.9032 19.5603 12.6527C19.3856 12.4023 19.1383 12.2114 18.8518 12.1059L18.8564 12.0994ZM13.4949 15.2812C13.2922 15.3556 13.1081 15.4732 12.9555 15.6259C12.8028 15.7786 12.6852 15.9626 12.6108 16.1653L10.8296 20.9897L9.05206 16.1616C8.97762 15.96 8.86038 15.7769 8.70841 15.6249C8.55644 15.4729 8.37336 15.3557 8.17175 15.2812L3.34738 13.5L8.17175 11.7188C8.37336 11.6443 8.55644 11.5271 8.70841 11.3751C8.86038 11.2231 8.97762 11.04 9.05206 10.8384L10.8333 6.01406L12.6146 10.8384C12.689 11.0411 12.8066 11.2252 12.9592 11.3778C13.1119 11.5305 13.2959 11.6481 13.4986 11.7225L18.323 13.5037L13.4949 15.2812ZM13.8333 3.75C13.8333 3.55109 13.9123 3.36032 14.053 3.21967C14.1936 3.07902 14.3844 3 14.5833 3H16.0833V1.5C16.0833 1.30109 16.1623 1.11032 16.303 0.96967C16.4436 0.829018 16.6344 0.75 16.8333 0.75C17.0322 0.75 17.223 0.829018 17.3636 0.96967C17.5043 1.11032 17.5833 1.30109 17.5833 1.5V3H19.0833C19.2822 3 19.473 3.07902 19.6136 3.21967C19.7543 3.36032 19.8333 3.55109 19.8333 3.75C19.8333 3.94891 19.7543 4.13968 19.6136 4.28033C19.473 4.42098 19.2822 4.5 19.0833 4.5H17.5833V6C17.5833 6.19891 17.5043 6.38968 17.3636 6.53033C17.223 6.67098 17.0322 6.75 16.8333 6.75C16.6344 6.75 16.4436 6.67098 16.303 6.53033C16.1623 6.38968 16.0833 6.19891 16.0833 6V4.5H14.5833C14.3844 4.5 14.1936 4.42098 14.053 4.28033C13.9123 4.13968 13.8333 3.94891 13.8333 3.75ZM23.5833 8.25C23.5833 8.44891 23.5043 8.63968 23.3636 8.78033C23.223 8.92098 23.0322 9 22.8333 9H22.0833V9.75C22.0833 9.94891 22.0043 10.1397 21.8636 10.2803C21.723 10.421 21.5322 10.5 21.3333 10.5C21.1344 10.5 20.9436 10.421 20.803 10.2803C20.6623 10.1397 20.5833 9.94891 20.5833 9.75V9H19.8333C19.6344 9 19.4436 8.92098 19.303 8.78033C19.1623 8.63968 19.0833 8.44891 19.0833 8.25C19.0833 8.05109 19.1623 7.86032 19.303 7.71967C19.4436 7.57902 19.6344 7.5 19.8333 7.5H20.5833V6.75C20.5833 6.55109 20.6623 6.36032 20.803 6.21967C20.9436 6.07902 21.1344 6 21.3333 6C21.5322 6 21.723 6.07902 21.8636 6.21967C22.0043 6.36032 22.0833 6.55109 22.0833 6.75V7.5H22.8333C23.0322 7.5 23.223 7.57902 23.3636 7.71967C23.5043 7.86032 23.5833 8.05109 23.5833 8.25Z"
                    fill="#3E00FA"
                  />
                </svg>
              ) : (
                <svg
                  width="18"
                  height="18"
                  viewBox="0 0 25 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clipPath="url(#clip0_271_1868)">
                    <path
                      d="M9.33363 16.1699L5.86363 12.6999C5.47363 12.3099 4.84363 12.3099 4.45363 12.6999C4.06363 13.0899 4.06363 13.7199 4.45363 14.1099L8.63363 18.2899C9.02363 18.6799 9.65363 18.6799 10.0436 18.2899L20.6236 7.70995C21.0136 7.31995 21.0136 6.68995 20.6236 6.29995C20.2336 5.90995 19.6036 5.90995 19.2136 6.29995L9.33363 16.1699Z"
                      fill="white"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_271_1868">
                      <rect
                        width="24"
                        height="24"
                        fill="white"
                        transform="translate(0.333496)"
                      />
                    </clipPath>
                  </defs>
                </svg>
              )}
            </div>
            <div className="ml-4 text-xs font-medium text-center text-surface-brand">
              {step.label}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Stepper;
